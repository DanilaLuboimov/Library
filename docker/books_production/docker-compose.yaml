version: "3.8"

services:
    postgres_books:
        image: postgres:15.1-alpine
        container_name: postgres_books
        restart: always
        volumes:
          - ../../pg_data:/var/lib/postgresql/data/
        environment:
              POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
              POSTGRES_USER: ${POSTGRES_USER}
              POSTGRES_DB: ${POSTGRES_DB}
              POSTGRES_INITDB_ARGS: "-A md5"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
            interval: 5s
            timeout: 10s
            retries: 10
            start_period: 10s
        expose:
            - ${POSTGRES_PORT}
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        env_file:
            - ../../.env
    web_app_books:
        build:
            context: ../../
            dockerfile: ./docker/application/Dockerfile
        container_name: django_books
        ports:
            - "8000:${DJANGO_PORT}"
        depends_on:
            postgres_books:
                condition: service_healthy
        volumes:
            - ../../src:/books
        env_file:
            - ../../.env
        command: >
            sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:${DJANGO_PORT}"
#            sh -c "python manage.py runserver 0.0.0.0:${DJANGO_PORT}"
